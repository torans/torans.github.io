<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>兰秋十六</title>
    <link>https://lanqiu.tech/</link>
    <description>Recent content on 兰秋十六</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Sat, 12 Mar 2022 15:24:45 +0800</lastBuildDate><atom:link href="https://lanqiu.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>核弹级教程：手把手教你白嫖上百个订阅节点</title>
      <link>https://lanqiu.tech/posts/get_free_proxies/</link>
      <pubDate>Sat, 12 Mar 2022 15:24:45 +0800</pubDate>
      
      <guid>https://lanqiu.tech/posts/get_free_proxies/</guid>
      <description>名词解释    爱折腾的小伙伴，对节点、Clash、Surge 之类的词都再熟悉不过了吧？ 梯子的工具随手可见，但是节点——如果不（yi）想（mao）破（bu）费（ba）的话——找起来并不是那么顺利。 因为大部分的免费节点，都需要挂上梯子去搜，陷入了无限循环。所以今天给大家介绍一个快速、免费、持久地获取节点订阅链接的终极解决方案！ PS：本文只提供思路，和具体操作，没有现成的链接。
总体思路    proxypool 的大名，想必大家都听说过。这是一个 go 语言开发的节点爬虫，部署在服务器上就能爬取各种来源的免费节点，并且提供测速、筛选等功能。
那么我们在没有服务器、不会自己搭建的时候，是不是可以白嫖别人的呢？答案是肯定的！
方法 1：    proxypool 默认使用的是 12580 端口，所以我们只要大量扫描 IP 端口，然后逐个尝试，总会抓到很多个 IP。
方法 2：    proxypool 前端页面的 title，默认是 “Free Proxies”，所以搜索这个关键字，也可以找到无数个搭建好的爬虫。
一种实现    上文提到的两种方法，固然我们可以自己慢慢来，但不是每个人都有耐心。这里给大家提供一个简单的思路。
首先我们打开 zoomeye.org
然后搜索 title:&amp;ldquo;Free Proxies&amp;rdquo; port:12580
搜索结果里的 ip，十有八九是搭建了 proxypool 的服务器，我们随便选几个打开试试。 好几千个节点，都已经赤裸裸地摆在你面前了！而且Clash配置文件、小火煎、sugre配置一应俱全！
如果使用的是其他客户端，还可以用下方的订阅链接来实现。
PS：如果IP打不开，可以试试加上端口12580，或者在ip旁边的文本框里找它的域名！
一点忠告    互联网不是法外之地。你的服务器在做什么，你在互联网上的一言一行，全都被别人看在眼里。所以还是低调，小心为妙。</description>
    </item>
    
    <item>
      <title>外部Prometheus监控k8s（k3s）集群</title>
      <link>https://lanqiu.tech/posts/local_prometheus_to_monitor_k8s_or_k3s_cluster/</link>
      <pubDate>Thu, 24 Feb 2022 15:39:20 +0800</pubDate>
      
      <guid>https://lanqiu.tech/posts/local_prometheus_to_monitor_k8s_or_k3s_cluster/</guid>
      <description>通过prometheus监控kubernetes时，在一些实际环境中，会存在把prometheus 部署到kubernetes集群外部，这时需要事先提供token和ca文件来做到自动发现。
具体操作步骤：
创建monitor 命名空间：    kubectl create namespace monitor 部署GPU-exporter      编写yaml文件
这里使用了节点亲和性，需要为gpu节点添加 gpu:true 的 标签
  #gpu_exporter-daemonSet.yaml apiVersion: apps/v1 kind: DaemonSet metadata: namespace: monitor labels: app: gpu-exporter name: gpu-exporter spec: selector: matchLabels: app: gpu-exporter template: metadata: labels: app: gpu-exporter spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: gpu operator: In values: - &amp;#34;true&amp;#34; hostPID: true hostIPC: true hostNetwork: true containers: - image: gpu_exporter:latest imagePullPolicy: Always name: gpu-exporter ports: - containerPort: 9445 name: gpu-port protocol: TCP resources: requests: cpu: 100m limits: cpu: 100m memory: 200Mi restartPolicy: Always serviceAccountName: &amp;#34;&amp;#34; imagePullSecrets: - name: &amp;lt;image-pull-secrets&amp;gt;  集群导入配置文件执行  kubectl apply -f gpu_exporter-daemonSet.</description>
    </item>
    
    <item>
      <title>Tags</title>
      <link>https://lanqiu.tech/tags/</link>
      <pubDate>Mon, 21 Feb 2022 22:42:59 +0800</pubDate>
      
      <guid>https://lanqiu.tech/tags/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【Golang】Mac下编译可以在linux下运行的程序</title>
      <link>https://lanqiu.tech/posts/build-go-project-for-linux-on-mac/</link>
      <pubDate>Mon, 21 Feb 2022 22:27:54 +0800</pubDate>
      
      <guid>https://lanqiu.tech/posts/build-go-project-for-linux-on-mac/</guid>
      <description>在mac下直接使用go build编译出来的文件在linux下无法运行，因此需要使用其他方法编译，执行下面的命令即可：
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go 该命令会下载相应的包,然后可以看到编译成功。</description>
    </item>
    
    <item>
      <title>开篇日记</title>
      <link>https://lanqiu.tech/posts/first/</link>
      <pubDate>Mon, 21 Feb 2022 17:53:10 +0800</pubDate>
      
      <guid>https://lanqiu.tech/posts/first/</guid>
      <description> 也不知道是第几次搭建独立博客了，希望这是最后一次折腾了。 多年的技术从业经历使我早已明白，作为靠技术技能吃饭的我，必须不断通过 学习来提升自己，否则终将被淘汰。
可不得不承认的是，在科技飞速发展的 今天，随着年龄的增长，以前的碎片化学习方式必定显得愈发吃力。所以，我 需要一个东西来记录我的学习记录，同时也希望能分享有意思的内容给各位朋友。 这就是我思考再三，还是决定重开博客的原因。
go!go!
 </description>
    </item>
    
    <item>
      <title>兰秋十六(Lan Qiu)</title>
      <link>https://lanqiu.tech/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lanqiu.tech/about/</guid>
      <description>简介:     码农，伪全栈。 90后油腻大叔，性别男，爱好女。 嗯～ 闷骚！放荡不羁爱自由。 喜欢旅行 &amp;amp; 书法 &amp;amp; 篮球 &amp;amp; 听音乐。 大学本科 - 前贵州大学科技学院计算机科学与技术。  经历：     2021年 - 至今 贵阳某创业型公司从事自动化运维工作。 2019年 - 2021年 河南郑州某公司从事技术开发工作。 2014年 - 2019年 连续创业，均失败告终。  技能树：     kubernetes docker python golang php vue  脚印：    北京 天津 陕西 重庆 上海 广东 海南 贵州 西藏 云南</description>
    </item>
    
    <item>
      <title>文章归档</title>
      <link>https://lanqiu.tech/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lanqiu.tech/archives/</guid>
      <description>历史文章按照年月归档.</description>
    </item>
    
  </channel>
</rss>
